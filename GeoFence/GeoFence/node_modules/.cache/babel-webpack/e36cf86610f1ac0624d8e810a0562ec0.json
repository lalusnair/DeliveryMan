{"ast":null,"code":"import { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { from } from '../observable/from';\nimport { operate } from '../util/lift';\nexport function share(options) {\n  options = options || {};\n  var _a = options.connector,\n      connector = _a === void 0 ? function () {\n    return new Subject();\n  } : _a,\n      _b = options.resetOnComplete,\n      resetOnComplete = _b === void 0 ? true : _b,\n      _c = options.resetOnError,\n      resetOnError = _c === void 0 ? true : _c,\n      _d = options.resetOnRefCountZero,\n      resetOnRefCountZero = _d === void 0 ? true : _d;\n  var connection = null;\n  var subject = null;\n  var refCount = 0;\n  var hasCompleted = false;\n  var hasErrored = false;\n\n  var reset = function reset() {\n    connection = subject = null;\n    hasCompleted = hasErrored = false;\n  };\n\n  return operate(function (source, subscriber) {\n    refCount++;\n    subject = subject !== null && subject !== void 0 ? subject : connector();\n    subscriber.add(function () {\n      refCount--;\n\n      if (resetOnRefCountZero && !refCount && !hasErrored && !hasCompleted) {\n        var conn = connection;\n        reset();\n        conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n      }\n    });\n    subject.subscribe(subscriber);\n\n    if (!connection) {\n      connection = new SafeSubscriber({\n        next: function next(value) {\n          return subject.next(value);\n        },\n        error: function error(err) {\n          hasErrored = true;\n          var dest = subject;\n\n          if (resetOnError) {\n            reset();\n          }\n\n          dest.error(err);\n        },\n        complete: function complete() {\n          hasCompleted = true;\n          var dest = subject;\n\n          if (resetOnComplete) {\n            reset();\n          }\n\n          dest.complete();\n        }\n      });\n      from(source).subscribe(connection);\n    }\n  });\n} //# sourceMappingURL=share.js.map","map":null,"metadata":{},"sourceType":"module"}